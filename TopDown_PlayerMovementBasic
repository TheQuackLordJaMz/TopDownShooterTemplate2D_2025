using UnityEngine;

public class PlayerController : MonoBehaviour
{
    // Player movement speed
    [SerializeField] private float speed = 5f;

    // Reference to the Rigidbody2D for physics-based movement
    [SerializeField] private Rigidbody2D rb;

    // Input values for movement (WASD / Arrow Keys)
    private float moveX;
    private float moveY;

    // Stores the mouse position in world space
    private Vector2 mousePos;

    private void Start()
    {
        // Get the Rigidbody2D component attached to this GameObject
        rb = GetComponent<Rigidbody2D>();
    }

    private void Update()
    {
        
        // Horizontal = A/D or Left/Right arrows
        // Vertical   = W/S or Up/Down arrows
        moveX = Input.GetAxisRaw("Horizontal");
        moveY = Input.GetAxisRaw("Vertical");

        
        mousePos = Camera.main.ScreenToWorldPoint(Input.mousePosition); // Convert the mouse position from screen coordinates to world coordinates

        // Calculate the angle (in degrees) between the player and the mouse cursor
        float angle = Mathf.Atan2(mousePos.y - transform.position.y,mousePos.x - transform.position.x) * Mathf.Rad2Deg - 90f;

        
        transform.localRotation = Quaternion.Euler(0, 0, angle);
    }

    private void FixedUpdate()
    {
        // Move the Rigidbody2D based on input
        // Normalized ensures diagonal movement isnâ€™t faster
        rb.linearVelocity = new Vector2(moveX, moveY).normalized * speed;
    }
}
